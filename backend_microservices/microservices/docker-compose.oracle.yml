version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: grofast_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    restart: unless-stopped

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: ../Dockerfile.template
    ports:
      - "8000:8000"
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8001
      - PRODUCT_SERVICE_URL=http://product-service:8002
      - CART_SERVICE_URL=http://cart-service:8003
      - ORDER_SERVICE_URL=http://order-service:8004
    depends_on:
      - auth-service
      - product-service
      - cart-service
      - order-service
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ./auth-service
      dockerfile: ../Dockerfile.template
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:admin123@postgres:5432/grofast_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Product Service
  product-service:
    build:
      context: ./product-service
      dockerfile: ../Dockerfile.template
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:admin123@postgres:5432/grofast_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  # Cart Service
  cart-service:
    build:
      context: ./cart-service
      dockerfile: ../Dockerfile.template
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:admin123@postgres:5432/grofast_db
      - PRODUCT_SERVICE_URL=http://product-service:8000
    depends_on:
      - postgres
      - product-service
    restart: unless-stopped

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: ../Dockerfile.template
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:admin123@postgres:5432/grofast_db
      - CART_SERVICE_URL=http://cart-service:8000
      - NOTIFICATION_SERVICE_URL=http://notification-service:8000
    depends_on:
      - postgres
      - cart-service
      - notification-service
    restart: unless-stopped

  # Delivery Service
  delivery-service:
    build:
      context: ./delivery-service
      dockerfile: ../Dockerfile.template
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:admin123@postgres:5432/grofast_db
      - SUPABASE_URL=https://ktpugnrihesretpdzbkn.supabase.co
      - SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Imt0cHVnbnJpaGVzcmV0cGR6YmtuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTE3ODYzODAsImV4cCI6MjA2NzM2MjM4MH0.ZLhDDC8b_JUfTvt6yPxl8yk8l4F9DDHNTEWIaBVfQ84
    depends_on:
      - postgres
    restart: unless-stopped

  # Notification Service
  notification-service:
    build:
      context: ./notification-service
      dockerfile: ../Dockerfile.template
    ports:
      - "8006:8000"
    environment:
      - FCM_SERVER_KEY=AAAA1234567890:APA91bHdummy_fcm_server_key_for_development
      - RESEND_API_KEY=re_QkbforEZ_PGuvSF6GPWhvNG5v353WjDgv
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    driver: bridge